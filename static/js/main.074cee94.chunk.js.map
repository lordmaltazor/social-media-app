{"version":3,"sources":["firebaseConfig.js","comps/LoginForm.js","comps/CreatePostModal.js","comps/Comment.js","comps/NewCommentForm.js","comps/Post.js","comps/CommentModal.js","comps/Feed.js","comps/UserSearchBar.js","comps/SearchForUserModal.js","comps/Homepage.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","LoginForm","usersRef","username","password","repeatedPassword","setUsername","setPassword","setRepeatedPassword","getUser","userExists","setHasLoggedIn","useState","isLoggingIn","setIsLoggingIn","errorMessage","setErrorMessage","inputFieldRefs","useRef","resetStates","current","forEach","element","value","addUserToDatabase","a","add","createdAt","FieldValue","serverTimestamp","addInputField","includes","push","className","onSubmit","e","preventDefault","type","onChange","target","placeholder","ref","onClick","CreatePostModal","setPostText","cancelPost","post","newPostTextarea","useEffect","focus","cols","rows","Comment","comment","style","color","sender","text","NewCommentForm","setCommentText","postComment","cancelComment","newCommentTextarea","Post","postsRef","isInteractable","setCreatingComment","setInspectedPost","isLiked","setIsLiked","isShaking","setIsShaking","useCollectionData","collection","doc","id","comments","likedBy","display","update","arrayRemove","arrayUnion","length","CommentsModal","commentText","commentsRef","commentsQuery","orderBy","idField","cancel","addCommentToDatabase","map","Feed","getFriendsPost","creatingComment","inspectedPost","UserSearchBar","search","setUserSearch","searchBarRef","SearchForUserModal","user","users","friends","friendsRef","setAddingFriend","userSearch","searchQuery","setSearchQuery","foundUser","setFoundUser","didFindUser","i","targetUser","hasAddedUser","delete","set","Homepage","creatingPost","setCreatingPost","addingFriend","postText","query","posts","menu","setMenu","friendsPosts","friendsNames","signOut","createPost","addPostToDatabase","App","hasLoggedIn","exists","usr","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAGAA,IAASC,cAAc,CACnBC,OAAQ,0CACRC,WAAY,yCACZC,UAAW,yBACXC,cAAe,qCACfC,kBAAmB,gBACnBC,MAAO,+CAGX,IAAMC,EAAYR,IAASQ,Y,iCCiIZC,MA1If,YAA4J,IAAvIC,EAAsI,EAAtIA,SAAUC,EAA4H,EAA5HA,SAAUC,EAAkH,EAAlHA,SAAUC,EAAwG,EAAxGA,iBAAkBC,EAAsF,EAAtFA,YAAaC,EAAyE,EAAzEA,YAAaC,EAA4D,EAA5DA,oBAAqBC,EAAuC,EAAvCA,QAASC,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,eAAkB,EACjHC,oBAAS,GADwG,mBAChJC,EADgJ,KACnIC,EADmI,OAE/GF,mBAAS,IAFsG,mBAEhJG,EAFgJ,KAElIC,EAFkI,KAIjJC,EAAiBC,iBAAO,IAqExBC,EAAc,WAChBH,EAAgB,IAEhBV,EAAY,IACZC,EAAY,IACZC,EAAoB,IAEpBS,EAAeG,QAAQC,SAAQ,SAAAC,GAC3BA,EAAQC,MAAQ,OAgBlBC,EAAiB,uCAAG,sBAAAC,EAAA,sEAChBvB,EAASwB,IAAI,CACfvB,SAAUA,EACVC,SAAUA,EACVuB,UAAWnC,IAASQ,UAAU4B,WAAWC,oBAJvB,2CAAH,qDAQjBC,EAAgB,SAACR,GACfA,IAAYL,EAAeG,QAAQW,SAAST,IAC5CL,EAAeG,QAAQY,KAAKV,IAIpC,OACI,sBAAKW,UAAU,kBAAf,UACKpB,EACG,mBAAGoB,UAAU,cAAb,mBACA,mBAAGA,UAAU,cAAb,qBAGJ,uBAAMC,SApGC,SAACC,GAGZ,GAFAA,EAAEC,iBAEe,KAAbjC,EAKC,GAAiB,KAAbC,EAMT,GAAIS,EAAa,CACb,IAAKH,EAAWP,GAGZ,YAFAa,EAAgB,4CAIf,GAAIN,EAAWP,IAAaM,EAAQN,GAAUC,WAAaA,EAG5D,YAFAY,EAAgB,0BAKhBL,GAAe,OAGlB,CACD,GAAyB,KAArBN,EAGA,YAFAW,EAAgB,sCAIf,GAAIX,IAAqBD,EAG1B,YAFAY,EAAgB,uDAIf,GAAIN,EAAWP,GAGhB,YAFAa,EAAgB,2BAKhBQ,IAEAV,GAAe,GAEfE,EAAgB,SAzCpBA,EAAgB,sCALhBA,EAAgB,kCAgGhB,UACI,uBAAOiB,UAAU,cAAcI,KAAK,OAAOC,SAjHhC,SAACH,GACpB7B,EAAY6B,EAAEI,OAAOhB,QAgHwDiB,YAAY,WAAWC,IAAKX,IAEjG,uBAAOG,UAAU,cAAcI,KAAK,WAAWC,SA/GpC,SAACH,GACpB5B,EAAY4B,EAAEI,OAAOhB,QA8G4DiB,YAAY,WAAWC,IAAKX,KAEnGjB,GAAe,uBAAOoB,UAAU,cAAcI,KAAK,WAAWC,SA7G7C,SAACH,GAC5B3B,EAAoB2B,EAAEI,OAAOhB,QA4G6EiB,YAAY,oBAAoBC,IAAKX,IAEtIjB,EACG,wBAAQoB,UAAU,eAAlB,mBACA,wBAAQA,UAAU,eAAlB,wBAIPpB,EAAc,mBAAGoB,UAAU,cAAcS,QAxCnC,WACX5B,GAAe,GAEfK,KAqCmB,oCAAyE,mBAAGc,UAAU,cAAcS,QA9C7G,WACV5B,GAAe,GAEfK,KA2C4F,mBAExF,mBAAGc,UAAU,gBAAb,SAA8BlB,Q,QC9G3B4B,MAxBf,YAA6D,IAAlCC,EAAiC,EAAjCA,YAAaC,EAAoB,EAApBA,WAAYC,EAAQ,EAARA,KAC1CC,EAAkB7B,iBAAO,MAU/B,OARA8B,qBAAU,WACND,EAAgB3B,QAAQ6B,UACzB,IAOC,qBAAKhB,UAAU,WAAf,SACI,sBAAKA,UAAU,oBAAf,UACI,wBAAQA,UAAU,QAAQS,QAASG,EAAnC,SAA+C,mBAAGZ,UAAU,mBAE5D,0BAAUA,UAAU,oBAAoBiB,KAAK,KAAKC,KAAK,KAAKV,IAAKM,EAAiBT,SATvE,SAACH,GACpBS,EAAYT,EAAEI,OAAOhB,QAQ+FiB,YAAY,qBAExH,wBAAQP,UAAU,cAAcS,QAASI,EAAzC,wBCPDM,MAXf,YAAuC,IAArBC,EAAoB,EAApBA,QAASlD,EAAW,EAAXA,SACvB,OACI,qBAAK8B,UAAU,UAAf,SACI,sBAAKA,UAAU,oBAAf,UACI,mBAAGA,UAAU,iBAAiBqB,MAAO,CAAEC,MAAOF,EAAQG,SAAWrD,EAAW,kBAAoB,sBAAhG,SAAwHkD,EAAQG,SAChI,mBAAGvB,UAAU,eAAb,SAA6BoB,EAAQI,aCStCC,MAdf,YAA6F,IAAnEC,EAAkE,EAAlEA,eAA+BC,GAAmC,EAAlDC,cAAkD,EAAnCD,aAAaE,EAAsB,EAAtBA,mBAKlE,OACI,sBAAK7B,UAAU,mBAAf,UACI,0BAAUA,UAAU,uBAAuBiB,KAAK,KAAKC,KAAK,KAAKb,SAN7C,SAACH,GACvBwB,EAAexB,EAAEI,OAAOhB,QAKwEkB,IAAKqB,EAAoBtB,YAAY,qBAEjI,wBAAQP,UAAU,sBAAsBS,QAASkB,EAAjD,yBCoDGG,MA1Df,YAAmG,IAAnFjB,EAAkF,EAAlFA,KAAMkB,EAA4E,EAA5EA,SAAU7D,EAAkE,EAAlEA,SAAU8D,EAAwD,EAAxDA,eAAgBC,EAAwC,EAAxCA,mBAAoBC,EAAoB,EAApBA,iBAAoB,EAChEvD,oBAAS,GADuD,mBACvFwD,EADuF,KAC9EC,EAD8E,OAG5DzD,oBAAS,GAHmD,mBAGvF0D,EAHuF,KAG5EC,EAH4E,OAK3EC,YAAkBxE,EAAUyE,WAAW,SAASC,IAAI5B,EAAK6B,IAAIF,WAAW,aAApFG,EALuF,oBAwC9F,OAjCA5B,qBAAU,WACNqB,EAAWvB,EAAK+B,QAAQ9C,SAAS5B,MAClC,IAgCC,sBAAK8B,UAAU,OAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,mBAAGA,UAAU,cAAcqB,MAAO,CAAEC,MAAOT,EAAKU,SAAWrD,EAAW,kBAAoB,sBAA1F,SAAmH2C,EAAKU,SACxH,mBAAGvB,UAAU,YAAb,SAA0Ba,EAAKW,UAGnC,sBAAKxB,UAAU,kBAAkBqB,MAAO,CAAEwB,QAASb,EAAiB,OAAS,QAA7E,UACI,wBAAQhC,UAAS,sBAAiBqC,EAAY,QAAU,IAAM5B,QArC7D,WACJI,EAAK+B,QAAQ9C,SAAS5B,IAYvB6D,EAASU,IAAI5B,EAAK6B,IAAII,OAAO,CACzBF,QAASrF,IAASQ,UAAU4B,WAAWoD,YAAY7E,KAGvDkE,GAAW,GAEXE,GAAa,KAhBbP,EAASU,IAAI5B,EAAK6B,IAAII,OAAO,CACzBF,QAASrF,IAASQ,UAAU4B,WAAWqD,WAAW9E,KAGtDkE,GAAW,GAEXE,GAAa,KA4BoEjB,MAAO,CAAEC,MAAOa,EAAU,qBAAuB,6BAA9H,SAA6J,mBAAGnC,UAAU,mBAC1K,mBAAGA,UAAU,iBAAb,SAA+Ba,EAAK+B,QAAQK,SAE5C,wBAAQjD,UAAU,kBAAkBS,QAjB3B,WACjBwB,GAAmB,GAEnBC,EAAiBrB,IAcT,SAA2D,mBAAGb,UAAU,sBACxE,mBAAGA,UAAU,oBAAb,SAAkC2C,EAAWA,EAASM,OAAS,WCAhEC,MAlDf,YAA0E,IAAjDrC,EAAgD,EAAhDA,KAAMkB,EAA0C,EAA1CA,SAAU7D,EAAgC,EAAhCA,SAAU+D,EAAsB,EAAtBA,mBAAsB,EAC/BtD,mBAAS,IADsB,mBAC9DwE,EAD8D,KACjDzB,EADiD,KAG/D0B,EAAcrB,EAASU,IAAI5B,EAAK6B,IAAIF,WAAW,YAC/Ca,EAAgBD,EAAYE,QAAQ,YAAa,QAJc,EAKlDf,YAAkBc,EAAe,CAAEE,QAAS,OAAxDZ,EAL8D,oBAO/Dd,EAAqB5C,iBAAO,MAElC8B,qBAAU,WACNc,EAAmB1C,QAAQ6B,UAC5B,IAEH,IAAMwC,EAAS,WACXvB,GAAmB,IAWjBwB,EAAoB,uCAAG,sBAAAjE,EAAA,sEACnB4D,EAAY3D,IAAI,CAClB+B,KAAM2B,EACN5B,OAAQrD,EACRwB,UAAWnC,IAASQ,UAAU4B,WAAWC,oBAJpB,2CAAH,qDAQ1B,OACI,qBAAKI,UAAU,WAAf,SACI,sBAAKA,UAAU,iBAAf,UACI,wBAAQA,UAAU,QAAQS,QAAS+C,EAAnC,SAA2C,mBAAGxD,UAAU,mBAExD,cAAC,EAAD,CAAMa,KAAMA,EAAMkB,SAAUA,EAAU7D,SAAUA,EAAU8D,gBAAgB,IAE1E,cAAC,EAAD,CAAgBN,eAAgBA,EAAgBE,cAAe4B,EAAQ7B,YAvB/D,WACI,KAAhBwB,IACAM,IAEA5B,EAAmB1C,QAAQG,MAAQ,KAmBkEuC,mBAAoBA,IAErH,qBAAK7B,UAAU,WAAf,SACM2C,GAAYA,EAASM,OAAS,GAAMN,EAASe,KAAI,SAAAtC,GAAO,OAAI,cAAC,EAAD,CAASA,QAASA,EAASlD,SAAUA,eChCxGyF,MAdf,YAA4F,IAA5EC,EAA2E,EAA3EA,eAAgB7B,EAA2D,EAA3DA,SAAU7D,EAAiD,EAAjDA,SAAU2F,EAAuC,EAAvCA,gBAAiB5B,EAAsB,EAAtBA,mBAAsB,EAC7CtD,mBAAS,MADoC,mBAChFmF,EADgF,KACjE5B,EADiE,KAKvF,OACI,sBAAKlC,UAAU,OAAf,UACK4D,KAAoBA,IAAiBX,OAAS,EAAIW,IAAiBF,KAAI,SAAA7C,GAAI,OAAI,cAAC,EAAD,CAAoBA,KAAMA,EAAMkB,SAAUA,EAAU7D,SAAUA,EAAU8D,gBAAgB,EAAM6B,gBAAiBA,EAAiB5B,mBAAoBA,EAAoBC,iBAAkBA,GAA/KrB,EAAK6B,OAAkM,mBAAG1C,UAAU,WAAb,2DAEjS6D,GAAmB,cAAC,EAAD,CAAehD,KAAMiD,EAAe/B,SAAUA,EAAU7D,SAAUA,EAAU+D,mBAAoBA,QCQjH8B,MAnBf,YAAmD,IAA1BC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,cACvBC,EAAejF,iBAAO,MAU5B,OARA8B,qBAAU,WACNmD,EAAa/E,QAAQ6B,UACtB,IAOC,uBAAMhB,UAAU,uBAAuBC,SAAU+D,EAAjD,UACI,uBAAOhE,UAAU,wBAAwBI,KAAK,OAAOI,IAAK0D,EAAc7D,SANtD,SAACH,GACvB+D,EAAc/D,EAAEI,OAAOhB,QAKkFiB,YAAY,sBACjH,wBAAQP,UAAU,yBAAlB,wBC6DGmE,MAzEf,YAAoF,IAAtDC,EAAqD,EAArDA,KAAMC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,QAASC,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,gBAAmB,EAC3C7F,mBAAS,IADkC,mBACxE8F,EADwE,KAC5DR,EAD4D,OAEzCtF,mBAAS,IAFgC,mBAExE+F,EAFwE,KAE3DC,EAF2D,OAG7ChG,mBAAS,MAHoC,mBAGxEiG,EAHwE,KAG7DC,EAH6D,KAuD/E,OACI,qBAAK7E,UAAU,WAAf,SACI,sBAAKA,UAAU,wBAAf,UACI,wBAAQA,UAAU,QAAQS,QAAS,kBAAM+D,GAAgB,IAAzD,SAAiE,mBAAGxE,UAAU,mBAE9E,cAAC,EAAD,CAAegE,OA3CZ,SAAC9D,GAGZ,GAFAA,EAAEC,iBAEiB,KAAfsE,EAAJ,CAIAE,EAAeF,GAEf,IAAIK,GAAc,EAElB,GAAIL,IAAeL,EAAKlG,SACpB,IAAK,IAAI6G,EAAI,EAAGA,EAAIV,EAAMpB,OAAQ8B,IAC1BV,EAAMU,GAAG7G,WAAauG,IACtBI,EAAaR,EAAMU,IAEnBD,GAAc,IAKN,IAAhBA,GACAD,EAAa,QAqBsBZ,cAAeA,IAE7CW,EAAY,sBAAK5E,UAAU,aAAf,UACT,mBAAGA,UAAU,kBAAb,SAAgC4E,EAAU1G,WA1DrC,SAAC8G,GAGlB,IAFA,IAAIC,GAAe,EAEVF,EAAI,EAAGA,EAAIT,EAAQrB,OAAQ8B,IAC5BT,EAAQS,GAAG7G,WAAa8G,EAAW9G,WACnC+G,GAAe,GAIvB,OAAOA,EAmDOA,CAAaL,GACT,wBAAQ5E,UAAU,kBAAkBS,QAfzC,WACb8D,EAAW9B,IAAImC,EAAUlC,IAAIwC,UAcX,sBADsB,wBAAQlF,UAAU,uBAAuBS,QAtBnE,WACd8D,EAAW9B,IAAImC,EAAUlC,IAAIyC,IAAI,CAC7BjH,SAAU0G,EAAU1G,SACpBC,SAAUyG,EAAUzG,SACpBuB,UAAWnC,IAASQ,UAAU4B,WAAWC,qBAkBL,8BAEP,KAAhB8E,GAAsB,oBAAG1E,UAAU,iBAAb,wDAA0E0E,EAA1E,aCgEhCU,MA7Hf,YAA8D,IAA1ChB,EAAyC,EAAzCA,KAAM1F,EAAmC,EAAnCA,eAAgB2F,EAAmB,EAAnBA,MAAOpG,EAAY,EAAZA,SAAY,EACjBU,oBAAS,GADQ,mBAClD0G,EADkD,KACpCC,EADoC,OAEX3G,oBAAS,GAFE,mBAElDkF,EAFkD,KAEjC5B,EAFiC,OAGjBtD,oBAAS,GAHQ,mBAGlD4G,EAHkD,KAGpCf,EAHoC,OAKzB7F,mBAAS,IALgB,mBAKlD6G,EALkD,KAKxC7E,EALwC,KAOnDoB,EAAWhE,EAAUyE,WAAW,SAChCiD,EAAQ1D,EAASuB,QAAQ,YAAa,QARa,EASzCf,YAAkBkD,EAAO,CAAElC,QAAS,OAA7CmC,EATkD,oBAWnDnB,EAAatG,EAASwE,IAAI2B,EAAK1B,IAAIF,WAAW,WAXK,EAYvCD,YAAkBgC,EAAY,CAAEhB,QAAS,OAApDe,EAZkD,sBAcjC3F,oBAAS,GAdwB,mBAclDgH,EAdkD,KAc5CC,EAd4C,KAgBnDhC,EAAiB,WACnB,GAAe,MAAXU,EAAJ,CAOA,IAHA,IAAIuB,EAAe,GAEfC,EAAe,GACVf,EAAI,EAAGA,EAAIT,EAAQrB,OAAQ8B,IAChCe,EAAaf,GAAKT,EAAQS,GAAG7G,SAGjC,IAAK,IAAI6G,EAAI,EAAGA,EAAIW,EAAMzC,OAAQ8B,IAC1Be,EAAahG,SAAS4F,EAAMX,GAAGxD,SAC/BsE,EAAa9F,KAAK2F,EAAMX,IAMhC,OAAOc,IAGXjC,IAEA,IAAMmC,EAAU,WACZrH,GAAe,IAGbsH,EAAa,WACfrF,EAAY,IAEZ2E,GAAgB,IAedW,EAAiB,uCAAG,sBAAAzG,EAAA,sEAChBuC,EAAStC,IAAI,CACf+B,KAAMgE,EACN5C,QAAS,GACTrB,OAAQ6C,EAAKlG,SACbwB,UAAWnC,IAASQ,UAAU4B,WAAWC,oBALvB,2CAAH,qDASvB,OACI,sBAAKI,UAAU,WAAf,UACI,gCACI,oBAAIA,UAAU,QAAd,8BAEA,sBAAKA,UAAU,cAAf,UACI,sBAAKA,UAAU,oBAAf,UACI,wBAAQA,UAAU,qBAAqBS,QAASuF,EAAhD,yBACA,wBAAQhG,UAAU,oBAAoBS,QAAS,kBAAM+D,GAAgB,IAArE,2BAGJ,sBAAKxE,UAAU,eAAf,UACI,mBAAGA,UAAU,mBAAb,SAAiCoE,EAAKlG,WACtC,wBAAQ8B,UAAU,kBAAkBS,QAASsF,EAA7C,4BAIR,sBAAK/F,UAAU,aAAf,UACI,wBAAQA,UAAU,wBAAwBS,QAAS,kBAAMmF,GAAQ,IAAjE,SAAwE,cAAC,IAAD,MAEvED,GAAQ,qBAAK3F,UAAU,aAEvB2F,GAAQ,sBAAK3F,UAAU,cAAf,UACL,wBAAQA,UAAU,QAAQS,QAAS,kBAAMmF,GAAQ,IAAjD,SAAyD,cAAC,IAAD,MAEzD,sBAAK5F,UAAU,sBAAf,UACI,mBAAGA,UAAU,0BAAb,SAAwCoE,EAAKlG,WAC7C,wBAAQ8B,UAAU,yBAAyBS,QAASsF,EAApD,yBAGJ,sBAAK/F,UAAU,2BAAf,UACI,wBAAQA,UAAU,4BAA4BS,QAAS,WACnDuF,IACAJ,GAAQ,IAFZ,yBAIA,wBAAQ5F,UAAU,2BAA2BS,QAAS,WAClD+D,GAAgB,GAChBoB,GAAQ,IAFZ,oCAShB,cAAC,EAAD,CAAMhC,eAAgBA,EAAgB7B,SAAUA,EAAU7D,SAAUkG,EAAKlG,SAAU2F,gBAAiBA,EAAiB5B,mBAAoBA,IAExIoD,GAAgB,cAAC,EAAD,CAAiB1E,YAAaA,EAAaC,WAnEjD,WACf0E,GAAgB,IAkEwEzE,KA/D/E,WACQ,KAAb2E,IACAF,GAAgB,GAEhBW,QA6DCV,GAAgB,cAAC,EAAD,CAAoBnB,KAAMA,EAAMC,MAAOA,EAAOpG,SAAUA,EAAUqG,QAASA,EAASC,WAAYA,EAAYC,gBAAiBA,QCtF3I0B,MArCf,WACI,IAAMjI,EAAWF,EAAUyE,WAAW,SAD3B,EAEKD,YAAkBtE,EAAU,CAAEsF,QAAS,OAAhDc,EAFI,sBAI2B1F,oBAAS,GAJpC,mBAIJwH,EAJI,KAISzH,EAJT,OAMqBC,mBAAS,IAN9B,mBAMJT,EANI,KAMMG,EANN,OAOqBM,mBAAS,IAP9B,mBAOJR,EAPI,KAOMG,EAPN,OAQqCK,mBAAS,IAR9C,mBAQJP,EARI,KAQcG,EARd,KAULC,EAAU,SAACiH,GACb,IAAK,IAAIV,EAAI,EAAGA,EAAIV,EAAMpB,OAAQ8B,IAC9B,GAAIV,EAAMU,GAAG7G,WAAauH,EACtB,OAAOpB,EAAMU,IAiBzB,OACI,qBAAK/E,UAAU,MAAf,SACKmG,EAAc,cAAC,EAAD,CAAU/B,KAAM5F,EAAQN,GAAWQ,eAAgBA,EAAgB2F,MAAOA,EAAOpG,SAAUA,IAAe,cAAC,EAAD,CAAWA,SAAUA,EAAUC,SAAUA,EAAUC,SAAUA,EAAUC,iBAAkBA,EAAkBC,YAAaA,EAAaC,YAAaA,EAAaC,oBAAqBA,EAAqBC,QAASA,EAASC,WAdzU,SAACgH,GAChB,IAAIW,GAAS,EAQb,OANA/B,EAAMX,KAAI,SAAA2C,GACFA,EAAInI,WAAauH,IACjBW,GAAS,MAIVA,GAKyW1H,eAAgBA,OC3BzX4H,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.074cee94.chunk.js","sourcesContent":["import firebase from 'firebase';\r\nimport 'firebase/firestore';\r\n\r\nfirebase.initializeApp({\r\n    apiKey: \"AIzaSyAuqsm6nu4J0RxsACn0askItlOXwkhza7U\",\r\n    authDomain: \"social-media-app-a9b1d.firebaseapp.com\",\r\n    projectId: \"social-media-app-a9b1d\",\r\n    storageBucket: \"social-media-app-a9b1d.appspot.com\",\r\n    messagingSenderId: \"1070630316696\",\r\n    appId: \"1:1070630316696:web:0f3e47cf2f7b0fef1efeed\"\r\n})\r\n\r\nconst firestore = firebase.firestore();\r\n\r\nexport {firestore};","import React, { useState, useRef } from 'react';\r\nimport firebase from 'firebase';\r\n\r\nfunction LoginForm({ usersRef, username, password, repeatedPassword, setUsername, setPassword, setRepeatedPassword, getUser, userExists, setHasLoggedIn }) {\r\n    const [isLoggingIn, setIsLoggingIn] = useState(true); // If false the user is signing in to their existing account\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    const inputFieldRefs = useRef([]);\r\n\r\n    const updateUsername = (e) => {\r\n        setUsername(e.target.value);\r\n    }\r\n\r\n    const updatePassword = (e) => {\r\n        setPassword(e.target.value);\r\n    }\r\n\r\n    const updateRepeatedPassword = (e) => {\r\n        setRepeatedPassword(e.target.value);\r\n    }\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (username === '') {\r\n            setErrorMessage(\"You have to enter a username!\");\r\n\r\n            return;\r\n        }\r\n        else if (password === '') {\r\n            setErrorMessage(\"You have to enter a password!\");\r\n\r\n            return;\r\n        }\r\n\r\n        if (isLoggingIn) {\r\n            if (!userExists(username)) {\r\n                setErrorMessage(\"Couldn't find a user with that username!\");\r\n\r\n                return;\r\n            }\r\n            else if (userExists(username) && getUser(username).password !== password) {\r\n                setErrorMessage(\"Password is incorrect!\");\r\n\r\n                return;\r\n            }\r\n            else {\r\n                setHasLoggedIn(true);\r\n            }\r\n        }\r\n        else {\r\n            if (repeatedPassword === '') {\r\n                setErrorMessage(\"You have to confirm your password!\");\r\n\r\n                return;\r\n            }\r\n            else if (repeatedPassword !== password) {\r\n                setErrorMessage(\"Your confirmed password and password doesn't match!\");\r\n\r\n                return;\r\n            }\r\n            else if (userExists(username)) {\r\n                setErrorMessage(\"That username is taken!\");\r\n\r\n                return;\r\n            }\r\n            else {\r\n                addUserToDatabase();\r\n\r\n                setIsLoggingIn(true);\r\n\r\n                setErrorMessage(\"\");\r\n            }\r\n        }\r\n    }\r\n\r\n    const resetStates = () => {\r\n        setErrorMessage(\"\");\r\n\r\n        setUsername('');\r\n        setPassword('');\r\n        setRepeatedPassword('');\r\n\r\n        inputFieldRefs.current.forEach(element => {\r\n            element.value = '';\r\n        });\r\n    }\r\n\r\n    const login = () => {\r\n        setIsLoggingIn(true);\r\n\r\n        resetStates();\r\n    }\r\n\r\n    const signUp = () => {\r\n        setIsLoggingIn(false);\r\n\r\n        resetStates();\r\n    }\r\n\r\n    const addUserToDatabase = async () => {\r\n        await usersRef.add({\r\n            username: username,\r\n            password: password,\r\n            createdAt: firebase.firestore.FieldValue.serverTimestamp()\r\n        })\r\n    }\r\n\r\n    const addInputField = (element) => {\r\n        if (element && !inputFieldRefs.current.includes(element)) {\r\n            inputFieldRefs.current.push(element);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            {isLoggingIn ?\r\n                <p className=\"login-title\">Login</p> :\r\n                <p className=\"login-title\">Sign Up</p>\r\n            }\r\n\r\n            <form onSubmit={submit}>\r\n                <input className=\"login-input\" type=\"text\" onChange={updateUsername} placeholder=\"Username\" ref={addInputField} />\r\n\r\n                <input className=\"login-input\" type=\"password\" onChange={updatePassword} placeholder=\"Password\" ref={addInputField} />\r\n\r\n                {!isLoggingIn && <input className=\"login-input\" type=\"password\" onChange={updateRepeatedPassword} placeholder=\"Repeated Password\" ref={addInputField} />}\r\n\r\n                {isLoggingIn ?\r\n                    <button className=\"login-submit\">Login</button> :\r\n                    <button className=\"login-submit\">Sign Up</button>\r\n                }\r\n            </form>\r\n\r\n            {isLoggingIn ? <p className=\"change-page\" onClick={signUp}>Don't have an account?</p> : <p className=\"change-page\" onClick={login}>Login</p>}\r\n\r\n            <p className=\"error-message\">{errorMessage}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginForm;","import React, { useEffect, useRef } from 'react';\r\n\r\nfunction CreatePostModal({ setPostText, cancelPost, post }) {\r\n    const newPostTextarea = useRef(null);\r\n\r\n    useEffect(() => {\r\n        newPostTextarea.current.focus();\r\n    }, [])\r\n\r\n    const updatePostText = (e) => {\r\n        setPostText(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"backdrop\">\r\n            <div className=\"create-post-modal\">\r\n                <button className=\"close\" onClick={cancelPost}><i className=\"fas fa-times\"></i></button>\r\n\r\n                <textarea className=\"new-post-textarea\" cols=\"30\" rows=\"10\" ref={newPostTextarea} onChange={updatePostText} placeholder=\"Say something...\"></textarea>\r\n\r\n                <button className=\"post-button\" onClick={post}>Post</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreatePostModal;\r\n","import React from 'react';\r\n\r\nfunction Comment({comment, username}) {\r\n    return (\r\n        <div className=\"comment\">\r\n            <div className=\"comment-container\">\r\n                <p className=\"comment-sender\" style={{ color: comment.sender === username ? \"rgb(255, 81, 0)\" : \"rgb(128, 128, 128)\"}}>{comment.sender}</p>\r\n                <p className=\"comment-text\">{comment.text}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comment;\r\n","import React from 'react';\r\n\r\nfunction NewCommentForm({ setCommentText, cancelComment, postComment, newCommentTextarea }) {\r\n    const updateCommentText = (e) => {\r\n        setCommentText(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"new-comment-form\">\r\n            <textarea className=\"new-comment-textarea\" cols=\"30\" rows=\"10\" onChange={updateCommentText} ref={newCommentTextarea} placeholder=\"Say something...\"></textarea>\r\n\r\n            <button className=\"post-comment-button\" onClick={postComment}>Comment</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewCommentForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport firebase from 'firebase';\r\nimport { firestore } from '../firebaseConfig';\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\n\r\nfunction Post({ post, postsRef, username, isInteractable, setCreatingComment, setInspectedPost }) {\r\n    const [isLiked, setIsLiked] = useState(false); // If the post has been liked by this user\r\n\r\n    const [isShaking, setIsShaking] = useState(false);\r\n\r\n    const [comments] = useCollectionData(firestore.collection('posts').doc(post.id).collection('comments'));\r\n\r\n    useEffect(() => {\r\n        setIsLiked(post.likedBy.includes(username));\r\n    }, [])\r\n\r\n    const like = () => {\r\n        if (!post.likedBy.includes(username)) // Like the post\r\n        {\r\n            postsRef.doc(post.id).update({\r\n                likedBy: firebase.firestore.FieldValue.arrayUnion(username)\r\n            });\r\n\r\n            setIsLiked(true);\r\n\r\n            setIsShaking(true);\r\n        }\r\n        else // Unlike the post\r\n        {\r\n            postsRef.doc(post.id).update({\r\n                likedBy: firebase.firestore.FieldValue.arrayRemove(username)\r\n            });\r\n\r\n            setIsLiked(false);\r\n\r\n            setIsShaking(false);\r\n        }\r\n    }\r\n\r\n    const openComments = () => {\r\n        setCreatingComment(true);\r\n\r\n        setInspectedPost(post);\r\n    }\r\n\r\n    return (\r\n        <div className=\"post\">\r\n            <div className=\"post-container\">\r\n                <p className=\"post-sender\" style={{ color: post.sender === username ? \"rgb(255, 81, 0)\" : \"rgb(128, 128, 128)\" }}>{post.sender}</p>\r\n                <p className=\"post-text\">{post.text}</p>\r\n            </div>\r\n\r\n            <div className=\"stats-container\" style={{ display: isInteractable ? \"flex\" : \"none\" }}>\r\n                <button className={`like-button ${isShaking ? \"shake\" : \"\"}`} onClick={like} style={{ color: isLiked ? \"rgba(255, 0, 0, 1)\" : 'rgba(128, 128, 128, 0.75)' }}><i className=\"fas fa-heart\"></i></button>\r\n                <p className=\"numer-of-likes\">{post.likedBy.length}</p>\r\n\r\n                <button className=\"comments-button\" onClick={openComments}><i className=\"fas fa-comments\"></i></button>\r\n                <p className=\"numer-of-comments\">{comments ? comments.length : 0}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport firebase from 'firebase';\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\nimport Comment from './Comment';\r\nimport NewCommentForm from './NewCommentForm';\r\nimport Post from './Post';\r\n\r\nfunction CommentsModal({ post, postsRef, username, setCreatingComment }) {\r\n    const [commentText, setCommentText] = useState('');\r\n\r\n    const commentsRef = postsRef.doc(post.id).collection('comments');\r\n    const commentsQuery = commentsRef.orderBy('createdAt', \"desc\");\r\n    const [comments] = useCollectionData(commentsQuery, { idField: 'id' });\r\n\r\n    const newCommentTextarea = useRef(null);\r\n\r\n    useEffect(() => {\r\n        newCommentTextarea.current.focus();\r\n    }, [])\r\n\r\n    const cancel = () => {\r\n        setCreatingComment(false);\r\n    }\r\n\r\n    const postComment = () => {\r\n        if (commentText !== '') {\r\n            addCommentToDatabase();\r\n\r\n            newCommentTextarea.current.value = '';\r\n        }\r\n    }\r\n\r\n    const addCommentToDatabase = async () => {\r\n        await commentsRef.add({\r\n            text: commentText,\r\n            sender: username,\r\n            createdAt: firebase.firestore.FieldValue.serverTimestamp()\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"backdrop\">\r\n            <div className=\"comments-modal\">\r\n                <button className=\"close\" onClick={cancel}><i className=\"fas fa-times\"></i></button>\r\n\r\n                <Post post={post} postsRef={postsRef} username={username} isInteractable={false} />\r\n\r\n                <NewCommentForm setCommentText={setCommentText} cancelComment={cancel} postComment={postComment} newCommentTextarea={newCommentTextarea} />\r\n\r\n                <div className=\"comments\">\r\n                    {(comments && comments.length > 0) && comments.map(comment => <Comment comment={comment} username={username} />)}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CommentsModal;\r\n","import React, { useState } from 'react';\r\nimport CommentsModal from './CommentModal';\r\nimport Post from './Post';\r\n\r\nfunction Feed({ getFriendsPost, postsRef, username, creatingComment, setCreatingComment }) {\r\n    const [inspectedPost, setInspectedPost] = useState(null);\r\n\r\n    //console.log(getFriendsPost()[0]);\r\n\r\n    return (\r\n        <div className=\"feed\">\r\n            {getFriendsPost() && getFriendsPost().length > 0 ? getFriendsPost().map(post => <Post key={post.id} post={post} postsRef={postsRef} username={username} isInteractable={true} creatingComment={creatingComment} setCreatingComment={setCreatingComment} setInspectedPost={setInspectedPost} />) : <p className=\"no-posts\">Click the 'Add Friend' button to add friends!</p>}\r\n\r\n            {creatingComment && <CommentsModal post={inspectedPost} postsRef={postsRef} username={username} setCreatingComment={setCreatingComment} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Feed;\r\n","import React, { useEffect, useRef } from 'react';\r\n\r\nfunction UserSearchBar({ search, setUserSearch }) {\r\n    const searchBarRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        searchBarRef.current.focus();\r\n    }, [])\r\n\r\n    const updateSearchQuery = (e) => {\r\n        setUserSearch(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <form className=\"search-for-user-form\" onSubmit={search}>\r\n            <input className=\"search-for-user-input\" type=\"text\" ref={searchBarRef} onChange={updateSearchQuery} placeholder=\"Search for a user\" />\r\n            <button className=\"search-for-user-button\">Search</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default UserSearchBar;\r\n","import React, { useState } from 'react';\r\nimport firebase from 'firebase';\r\nimport UserSearchBar from './UserSearchBar';\r\n\r\nfunction SearchForUserModal({ user, users, friends, friendsRef, setAddingFriend }) {\r\n    const [userSearch, setUserSearch] = useState('');\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const [foundUser, setFoundUser] = useState(null);\r\n\r\n    const hasAddedUser = (targetUser) => {\r\n        let hasAddedUser = false;\r\n\r\n        for (let i = 0; i < friends.length; i++) {\r\n            if (friends[i].username === targetUser.username) {\r\n                hasAddedUser = true;\r\n            }\r\n        }\r\n\r\n        return hasAddedUser;\r\n    }\r\n\r\n    const search = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (userSearch === '') {\r\n            return;\r\n        }\r\n\r\n        setSearchQuery(userSearch);\r\n\r\n        let didFindUser = false;\r\n\r\n        if (userSearch !== user.username) {\r\n            for (let i = 0; i < users.length; i++) {\r\n                if (users[i].username === userSearch) {\r\n                    setFoundUser(users[i]);\r\n\r\n                    didFindUser = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (didFindUser === false) {\r\n            setFoundUser(null);\r\n        }\r\n    }\r\n\r\n    const addFriend = () => {\r\n        friendsRef.doc(foundUser.id).set({\r\n            username: foundUser.username,\r\n            password: foundUser.password,\r\n            createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n        });\r\n    }\r\n\r\n    const unFriend = () => {\r\n        friendsRef.doc(foundUser.id).delete();\r\n    }\r\n\r\n    return (\r\n        <div className=\"backdrop\">\r\n            <div className=\"search-for-user-modal\">\r\n                <button className=\"close\" onClick={() => setAddingFriend(false)}><i className=\"fas fa-times\"></i></button>\r\n\r\n                <UserSearchBar search={search} setUserSearch={setUserSearch} />\r\n\r\n                {foundUser ? <div className=\"found-user\">\r\n                    <p className=\"found-user-name\">{foundUser.username}</p>\r\n\r\n                    {!hasAddedUser(foundUser) ? <button className=\"add-as-friend-button\" onClick={addFriend}>Add as Friend</button>\r\n                        : <button className=\"unfriend-button\" onClick={unFriend}>Unfriend</button>}\r\n                </div> : searchQuery !== '' && <p className=\"no-users-found\">Sorry, didn't find any user with the name '{searchQuery}'</p>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchForUserModal;\r\n","import React, { useState } from 'react';\r\nimport firebase from 'firebase';\r\nimport { firestore } from '../firebaseConfig';\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\nimport { FaBars } from 'react-icons/fa';\r\nimport { FaTimes } from 'react-icons/fa';\r\nimport CreatePostModal from './CreatePostModal';\r\nimport Feed from './Feed';\r\nimport SearchForUserModal from './SearchForUserModal';\r\n\r\nfunction Homepage({ user, setHasLoggedIn, users, usersRef }) {\r\n    const [creatingPost, setCreatingPost] = useState(false);\r\n    const [creatingComment, setCreatingComment] = useState(false);\r\n    const [addingFriend, setAddingFriend] = useState(false);\r\n\r\n    const [postText, setPostText] = useState('');\r\n\r\n    const postsRef = firestore.collection('posts');\r\n    const query = postsRef.orderBy('createdAt', \"desc\");\r\n    const [posts] = useCollectionData(query, { idField: 'id' });\r\n\r\n    const friendsRef = usersRef.doc(user.id).collection('friends');\r\n    const [friends] = useCollectionData(friendsRef, { idField: 'id' });\r\n\r\n    const [menu, setMenu] = useState(false);\r\n\r\n    const getFriendsPost = () => {\r\n        if (friends == null) {\r\n            return;\r\n        }\r\n\r\n        let friendsPosts = [];\r\n\r\n        let friendsNames = [];\r\n        for (let i = 0; i < friends.length; i++) {\r\n            friendsNames[i] = friends[i].username;\r\n        }\r\n\r\n        for (let i = 0; i < posts.length; i++) {\r\n            if (friendsNames.includes(posts[i].sender)) {\r\n                friendsPosts.push(posts[i]);\r\n            }\r\n        }\r\n\r\n        //console.log(friendsPosts);\r\n\r\n        return friendsPosts;\r\n    }\r\n\r\n    getFriendsPost();\r\n\r\n    const signOut = () => {\r\n        setHasLoggedIn(false);\r\n    }\r\n\r\n    const createPost = () => {\r\n        setPostText('');\r\n\r\n        setCreatingPost(true);\r\n    }\r\n\r\n    const cancelPost = () => {\r\n        setCreatingPost(false);\r\n    }\r\n\r\n    const post = () => {\r\n        if (postText !== '') {\r\n            setCreatingPost(false);\r\n\r\n            addPostToDatabase();\r\n        }\r\n    }\r\n\r\n    const addPostToDatabase = async () => {\r\n        await postsRef.add({\r\n            text: postText,\r\n            likedBy: [],\r\n            sender: user.username,\r\n            createdAt: firebase.firestore.FieldValue.serverTimestamp()\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"homepage\">\r\n            <nav>\r\n                <h1 className=\"title\">Social Media App</h1>\r\n\r\n                <div className=\"desktop-nav\">\r\n                    <div className=\"buttons-container\">\r\n                        <button className=\"create-post-button\" onClick={createPost}>Create Post</button>\r\n                        <button className=\"add-friend-button\" onClick={() => setAddingFriend(true)}>Add Friend</button>\r\n                    </div>\r\n\r\n                    <div className=\"profile-info\">\r\n                        <p className=\"current-username\">{user.username}</p>\r\n                        <button className=\"sign-out-button\" onClick={signOut}>Sign Out</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"mobile-nav\">\r\n                    <button className=\"hamburger-menu-button\" onClick={() => setMenu(true)}><FaBars /></button>\r\n\r\n                    {menu && <div className=\"backdrop\"></div>}\r\n\r\n                    {menu && <div className=\"mobile-menu\">\r\n                        <button className=\"close\" onClick={() => setMenu(false)}><FaTimes /></button>\r\n\r\n                        <div className=\"mobile-profile-info\">\r\n                            <p className=\"mobile-current-username\">{user.username}</p>\r\n                            <button className=\"mobile-sign-out-button\" onClick={signOut}>Sign Out</button>\r\n                        </div>\r\n\r\n                        <div className=\"mobile-buttons-container\">\r\n                            <button className=\"mobile-create-post-button\" onClick={() => {\r\n                                createPost();\r\n                                setMenu(false);\r\n                            }}>Create Post</button>\r\n                            <button className=\"mobile-add-friend-button\" onClick={() => {\r\n                                setAddingFriend(true);\r\n                                setMenu(false);\r\n                            }}>Add Friend</button>\r\n                        </div>\r\n                    </div>}\r\n                </div>\r\n            </nav>\r\n\r\n            <Feed getFriendsPost={getFriendsPost} postsRef={postsRef} username={user.username} creatingComment={creatingComment} setCreatingComment={setCreatingComment} />\r\n\r\n            {creatingPost && <CreatePostModal setPostText={setPostText} cancelPost={cancelPost} post={post} />}\r\n\r\n            {addingFriend && <SearchForUserModal user={user} users={users} usersRef={usersRef} friends={friends} friendsRef={friendsRef} setAddingFriend={setAddingFriend} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Homepage;\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport { firestore } from './firebaseConfig';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport LoginForm from './comps/LoginForm.js';\nimport Homepage from './comps/Homepage';\n\nfunction App() {\n    const usersRef = firestore.collection('users');\n    const [users] = useCollectionData(usersRef, { idField: 'id' });\n\n    const [hasLoggedIn, setHasLoggedIn] = useState(false);\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [repeatedPassword, setRepeatedPassword] = useState('');\n\n    const getUser = (query) => {\n        for (let i = 0; i < users.length; i++) {\n            if (users[i].username === query) {\n                return users[i];\n            }\n        }\n    }\n\n    const userExists = (query) => {\n        let exists = false;\n\n        users.map(usr => {\n            if (usr.username === query) {\n                exists = true;\n            }\n        });\n\n        return exists;\n    }\n\n    return (\n        <div className=\"app\">\n            {hasLoggedIn ? <Homepage user={getUser(username)} setHasLoggedIn={setHasLoggedIn} users={users} usersRef={usersRef} /> : <LoginForm usersRef={usersRef} username={username} password={password} repeatedPassword={repeatedPassword} setUsername={setUsername} setPassword={setPassword} setRepeatedPassword={setRepeatedPassword} getUser={getUser} userExists={userExists} setHasLoggedIn={setHasLoggedIn} />}\n        </div>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}