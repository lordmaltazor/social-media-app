{"version":3,"sources":["firebaseConfig.js","comps/LoginForm.js","comps/CreatePostModal.js","comps/Comment.js","comps/NewCommentForm.js","comps/Post.js","comps/CommentModal.js","comps/Feed.js","comps/Homepage.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","LoginForm","setUsername","setPassword","setRepeatedPassword","submit","isLoggingIn","signUp","errorMessage","updateUsername","e","target","value","updatePassword","className","style","display","onSubmit","type","onChange","placeholder","onClick","CreatePostModal","setPostText","cancelPost","post","newPostTextarea","useRef","useEffect","current","focus","cols","rows","ref","Comment","comment","username","color","sender","text","NewCommentForm","setCommentText","cancelComment","postComment","newCommentTextarea","Post","postsRef","isInteractable","setCreatingComment","setInspectedPost","useState","isLiked","setIsLiked","isShaking","setIsShaking","useCollectionData","collection","doc","id","comments","likedBy","includes","update","FieldValue","arrayRemove","arrayUnion","length","CommentsModal","commentText","commentsRef","commentsQuery","orderBy","idField","addCommentToDatabase","a","add","createdAt","serverTimestamp","map","Feed","posts","creatingComment","inspectedPost","Homepage","setHasLoggedIn","creatingPost","setCreatingPost","postText","query","addPostToDatabase","App","setIsLoggingIn","hasLoggedIn","password","repeatedPassword","setErrorMessage","usersRef","users","reset","getUser","i","userExists","exists","usr","addUserToDatabase","preventDefault","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.46ebf59e.chunk.js","sourcesContent":["import firebase from 'firebase';\r\nimport 'firebase/firestore';\r\n\r\nfirebase.initializeApp({\r\n    apiKey: \"AIzaSyAuqsm6nu4J0RxsACn0askItlOXwkhza7U\",\r\n    authDomain: \"social-media-app-a9b1d.firebaseapp.com\",\r\n    projectId: \"social-media-app-a9b1d\",\r\n    storageBucket: \"social-media-app-a9b1d.appspot.com\",\r\n    messagingSenderId: \"1070630316696\",\r\n    appId: \"1:1070630316696:web:0f3e47cf2f7b0fef1efeed\"\r\n})\r\n\r\nconst firestore = firebase.firestore();\r\n\r\nexport {firestore};","import React from 'react';\r\n\r\nfunction LoginForm({setUsername, setPassword, setRepeatedPassword, submit, isLoggingIn, signUp, errorMessage}) {  \r\n    const updateUsername = (e) => {\r\n        setUsername(e.target.value);\r\n    }\r\n\r\n    const updatePassword = (e) => {\r\n        setPassword(e.target.value);\r\n    }\r\n\r\n    const updateRepeatedPassword = (e) => {\r\n        setRepeatedPassword(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"login-sign-up-container\">\r\n            <div className=\"login\" style={{display: isLoggingIn ? \"flex\" : 'none' }}>\r\n                <p className=\"login-title\">Login</p>\r\n                \r\n                <form onSubmit={submit}>                    \r\n                    <input type=\"text\" onChange={updateUsername} placeholder=\"Username\"/>\r\n            \r\n                    <input type=\"password\" onChange={updatePassword} placeholder=\"password\"/>\r\n\r\n                    <button className=\"submit\">Login</button>\r\n                </form>\r\n\r\n                <p className=\"no-account\" onClick={signUp}>Don't have an account?</p>\r\n\r\n                <p className=\"error-message\">{errorMessage}</p>\r\n            </div>\r\n    \r\n            <div className=\"sign-up\" style={{display: !isLoggingIn ? \"flex\" : 'none' }}>\r\n                <p className=\"sign-up-title\">Sign Up</p>\r\n\r\n                <form onSubmit={submit}>\r\n                    <input type=\"text\" onChange={updateUsername} placeholder=\"Username\"/>\r\n        \r\n                    <input type=\"password\" onChange={updatePassword} placeholder=\"password\"/>\r\n        \r\n                    <input type=\"password\" onChange={updateRepeatedPassword} placeholder=\"repeat password\"/>\r\n\r\n                    <button className=\"submit\" onClick={submit}>Sign up</button>\r\n                </form>\r\n\r\n                <p className=\"error-message\">{errorMessage}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginForm;","import React, { useEffect, useRef } from 'react';\r\n\r\nfunction CreatePostModal({setPostText, cancelPost, post}) {\r\n    const newPostTextarea = useRef(null);\r\n    \r\n    useEffect(() => {\r\n        newPostTextarea.current.focus();\r\n    }, [])\r\n\r\n    const updatePostText = (e) => {\r\n        setPostText(e.target.value);\r\n    }\r\n    \r\n    return (\r\n        <div className=\"backdrop\">\r\n            <div className=\"create-post-modal\">\r\n                <div className=\"create-post\">\r\n                    <textarea className=\"new-post-textarea\" cols=\"30\" rows=\"10\" ref={newPostTextarea} onChange={updatePostText} placeholder=\"Say something...\"></textarea>\r\n                </div>\r\n                \r\n                <div className=\"buttons-container\">\r\n                    <button className=\"cancel-post-button\" onClick={cancelPost}>Cancel</button>\r\n                    <button className=\"post-button\" onClick={post}>Post</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreatePostModal;\r\n","import React from 'react';\r\n\r\nfunction Comment({comment, username}) {\r\n    return (\r\n        <div className=\"comment\">\r\n            <div className=\"comment-container\">\r\n                <p className=\"comment-sender\" style={{ color: comment.sender === username ? \"rgb(255, 81, 0)\" : \"rgb(128, 128, 128)\"}}>{comment.sender}</p>\r\n                <p className=\"comment-text\">{comment.text}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comment;\r\n","import React from 'react';\r\n\r\nfunction NewCommentForm({setCommentText, cancelComment, postComment, newCommentTextarea}) {\r\n    const updateCommentText = (e) => {\r\n        setCommentText(e.target.value);\r\n    }\r\n    \r\n    return (\r\n        <div className=\"new-comment-form\">\r\n            <textarea className=\"new-comment-textarea\" cols=\"30\" rows=\"10\" onChange={updateCommentText} ref={newCommentTextarea} placeholder=\"Say something...\"></textarea>\r\n                \r\n            <div className=\"new-comment-buttons-container\">\r\n                <button className=\"cancel-comment-button\" onClick={cancelComment}>Cancel</button>\r\n                <button className=\"post-comment-button\" onClick={postComment}>Comment</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewCommentForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport firebase from 'firebase';\r\nimport {firestore} from '../firebaseConfig';\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\n\r\nfunction Post({post, postsRef, username, isInteractable, setCreatingComment, setInspectedPost}) {\r\n    const [isLiked, setIsLiked] = useState(false); // If the post has been liked by this user\r\n\r\n    const [isShaking, setIsShaking] = useState(false);\r\n\r\n    const [comments] = useCollectionData(firestore.collection('posts').doc(post.id).collection('comments'));\r\n\r\n    useEffect(() => {\r\n        setIsLiked(post.likedBy.includes(username));\r\n    }, [])\r\n\r\n    const like = () => {\r\n        if (!post.likedBy.includes(username)) // Like the post\r\n        {\r\n            postsRef.doc(post.id).update({ \r\n                likedBy: firebase.firestore.FieldValue.arrayUnion(username)\r\n            });\r\n\r\n            setIsLiked(true);\r\n\r\n            setIsShaking(true);\r\n        }\r\n        else // Unlike the post\r\n        {\r\n            postsRef.doc(post.id).update({ \r\n                likedBy: firebase.firestore.FieldValue.arrayRemove(username)\r\n            });\r\n            \r\n            setIsLiked(false);\r\n\r\n            setIsShaking(false);\r\n        }\r\n    }\r\n\r\n    const openComments = () => {\r\n        setCreatingComment(true);\r\n\r\n        setInspectedPost(post);\r\n    }\r\n\r\n    return (\r\n        <div className=\"post\">            \r\n            <div className=\"post-container\">\r\n                <p className=\"post-sender\" style={{ color: post.sender === username ? \"rgb(255, 81, 0)\" : \"rgb(128, 128, 128)\"}}>{post.sender}</p>\r\n                <p className=\"post-text\">{post.text}</p>\r\n            </div>\r\n\r\n            <div className=\"stats-container\" style={{display: isInteractable ? \"flex\" : \"none\"}}>\r\n                <button className={`like-button ${isShaking ? \"shake\" : \"\"}`} onClick={like} style={{ color: isLiked ? \"rgba(255, 0, 0, 1)\" : 'rgba(128, 128, 128, 0.75)' }}><i className=\"fas fa-heart\"></i></button>\r\n                <p className=\"numer-of-likes\">{post.likedBy.length}</p>\r\n\r\n                <button className=\"comments-button\" onClick={openComments}><i className=\"fas fa-comments\"></i></button>\r\n                <p className=\"numer-of-comments\">{comments ? comments.length : 0}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport firebase from 'firebase';\r\nimport {firestore} from '../firebaseConfig';\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\nimport Comment from './Comment';\r\nimport NewCommentForm from './NewCommentForm';\r\nimport Post from './Post';\r\n\r\nfunction CommentsModal({post, postsRef, username, setCreatingComment}) {\r\n    const [commentText, setCommentText] = useState('');\r\n    \r\n    const commentsRef = firestore.collection('posts').doc(post.id).collection('comments');   \r\n    const commentsQuery = commentsRef.orderBy('createdAt', \"desc\"); \r\n    const [comments] = useCollectionData(commentsQuery, {idField: 'id'});\r\n\r\n    const newCommentTextarea = useRef(null);\r\n\r\n    useEffect(() => {\r\n        newCommentTextarea.current.focus();\r\n    }, [])\r\n\r\n    const cancelComment = () => {\r\n        setCreatingComment(false);\r\n    }\r\n\r\n    const postComment = () => {\r\n        if (commentText !== '')\r\n        {\r\n            addCommentToDatabase();\r\n\r\n            newCommentTextarea.current.value = '';\r\n        }\r\n    }\r\n\r\n    const addCommentToDatabase = async() => {\r\n        await commentsRef.add({\r\n            text: commentText,\r\n            sender: username,\r\n            createdAt: firebase.firestore.FieldValue.serverTimestamp()\r\n        })\r\n    }\r\n    \r\n    return (\r\n        <div className=\"backdrop\">\r\n            <div className=\"comments-modal\">\r\n                <Post post={post} postsRef={postsRef} username={username} isInteractable={false}/>\r\n                \r\n                <NewCommentForm setCommentText={setCommentText} cancelComment={cancelComment} postComment={postComment} newCommentTextarea={newCommentTextarea}/>\r\n                \r\n                <div className=\"comments\">\r\n                    {(comments && comments.length > 0) ? comments.map(comment => <Comment comment={comment} username={username}/>) : <p className=\"no-comments\">There doesn't seem to be any comments here yet :/</p>}\r\n                </div> \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CommentsModal;\r\n","import React, { useState } from 'react';\r\nimport CommentsModal from './CommentModal';\r\nimport Post from './Post';\r\n\r\nfunction Feed({posts, postsRef, username, creatingComment, setCreatingComment}) {\r\n    const [inspectedPost, setInspectedPost] = useState(null);\r\n    \r\n    return (\r\n        <div className=\"feed\">\r\n            {(posts && posts.length > 0) ? posts.map(post => <Post key={post.id} post={post} postsRef={postsRef} username={username} isInteractable={true} creatingComment={creatingComment} setCreatingComment={setCreatingComment} setInspectedPost={setInspectedPost}/>) : <p className=\"no-posts\">There doesn't seem to be any posts here yet :/</p>}\r\n\r\n            {creatingComment && <CommentsModal post={inspectedPost} postsRef={postsRef} username={username} setCreatingComment={setCreatingComment}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Feed;\r\n","import React, { useState } from 'react';\r\nimport firebase from 'firebase';\r\nimport {firestore} from '../firebaseConfig';\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\nimport CreatePostModal from './CreatePostModal';\r\nimport Feed from './Feed';\r\n\r\nfunction Homepage({username, setHasLoggedIn}) {\r\n    const [creatingPost, setCreatingPost] = useState(false);\r\n    const [creatingComment, setCreatingComment] = useState(false);\r\n\r\n    const [postText, setPostText] = useState('');\r\n\r\n    const postsRef = firestore.collection('posts');   \r\n    const query = postsRef.orderBy('createdAt', \"desc\"); \r\n    const [posts] = useCollectionData(query, {idField: 'id'});\r\n\r\n    const signOut = () => {\r\n        setHasLoggedIn(false);\r\n    }\r\n\r\n    const createPost = () => {\r\n        setCreatingPost(true);\r\n    }\r\n\r\n    const cancelPost = () => {\r\n        setCreatingPost(false);\r\n    }\r\n\r\n    const post = () => {\r\n        if (postText !== '')\r\n        {\r\n            setCreatingPost(false);\r\n            \r\n            addPostToDatabase();\r\n        }\r\n    }\r\n\r\n    const addPostToDatabase = async() => {\r\n        await postsRef.add({\r\n            text: postText,\r\n            likedBy: [],\r\n            sender: username,\r\n            createdAt: firebase.firestore.FieldValue.serverTimestamp()\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"homepage\">\r\n            <nav>\r\n                <button className=\"create-post-button\" onClick={createPost}>Create Post</button>\r\n\r\n                <h1 className=\"title\">Social Media App</h1>\r\n\r\n                <div className=\"profile-info\">\r\n                    <p className=\"current-username\">{username}</p>\r\n                    <button className=\"sign-out-button\" onClick={signOut}>Sign Out</button>\r\n                </div>\r\n            </nav>\r\n\r\n            <Feed posts={posts} postsRef={postsRef} username={username} creatingComment={creatingComment} setCreatingComment={setCreatingComment}/>\r\n\r\n            {creatingPost && <CreatePostModal setPostText={setPostText} cancelPost={cancelPost} post={post}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Homepage;\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport firebase from 'firebase';\nimport {firestore} from './firebaseConfig';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport LoginForm from './comps/LoginForm.js';\nimport Homepage from './comps/Homepage';\n\nfunction App() {  \n  const [isLoggingIn, setIsLoggingIn] = useState(true);\n  const [hasLoggedIn, setHasLoggedIn] = useState(false);\n  \n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [repeatedPassword, setRepeatedPassword] = useState('');\n\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const usersRef = firestore.collection('users');    \n  const [users] = useCollectionData(usersRef);\n  \n  const submit = (e) => {\n    e.preventDefault();\n\n    if (username === '')\n    {\n      setErrorMessage(\"You have to enter a username!\");\n\n      return;\n    }\n    else if (password === '')\n    {\n      setErrorMessage(\"You have to enter a password!\");\n\n      return;\n    }\n\n    if (isLoggingIn)\n    {\n      if (!userExists(username))\n      {\n        setErrorMessage(\"Couln't find a user with that username!\");\n\n        return;\n      }\n      else if (userExists(username) && getUser(username).password !== password)\n      {\n        setErrorMessage(\"Password is incorrect!\");\n\n        return;\n      }\n      else\n      {\n        setHasLoggedIn(true);\n      }\n    }\n    else if (!isLoggingIn)\n    {\n      if (repeatedPassword === '')\n      {\n        setErrorMessage(\"You have to confirm your password!\");\n\n        return;\n      }\n      else if (repeatedPassword !== password)\n      {\n        setErrorMessage(\"Your confirmed password and password doesn't match!\");\n\n        return;\n      }\n      else if (userExists(username))\n      {\n        setErrorMessage(\"That username is taken!\");\n\n        return;\n      }\n      else\n      {\n        addUserToDatabase();\n\n        reset();\n\n        setIsLoggingIn(true);\n      }\n    }\n  }\n\n  const reset = () => {\n    setErrorMessage(\"\");\n\n    setUsername('');\n    setPassword('');\n    setRepeatedPassword('');\n  }\n\n  const signUp = () => {\n    setIsLoggingIn(false);\n\n    reset();\n  }\n\n  const getUser = (query) => {\n    for (let i = 0; i < users.length; i++)\n    {\n      if (users[i].username === query)\n      {\n        return users[i];\n      }\n    }\n  }\n\n  const userExists = (query) => {\n    let exists = false;\n    \n    users.map(usr => {\n      if (usr.username === query)\n      {\n        exists = true;\n      }\n    });\n\n    return exists;\n  }\n\n  const addUserToDatabase = async() => {\n    await usersRef.add({\n        username: username,\n        password: password,\n        createdAt: firebase.firestore.FieldValue.serverTimestamp()\n    })\n  }\n\n  return (\n    <div className=\"app\">\n      {hasLoggedIn ? <Homepage username={username} setHasLoggedIn={setHasLoggedIn}/> : <LoginForm setUsername={setUsername} setPassword={setPassword} setRepeatedPassword={setRepeatedPassword} submit={submit} isLoggingIn={isLoggingIn} signUp={signUp} errorMessage={errorMessage}/>}\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}